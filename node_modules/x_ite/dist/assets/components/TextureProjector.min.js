/* X_ITE v8.4.3 */(()=>{"use strict";var t={n:e=>{var i=e&&e.__esModule?()=>e.default:()=>e;return t.d(i,{a:i}),i},d:(e,i)=>{for(var r in i)t.o(i,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:i[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Components");var i=t.n(e);const r=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Fields");var o=t.n(r);const n=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Base/X3DFieldDefinition");var s=t.n(n);const a=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Base/FieldDefinitionArray");var u=t.n(a);const c=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Components/Core/X3DChildNode");var h=t.n(c);const l=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Base/X3DConstants");var x=t.n(l);const p=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Base/X3DCast");var d=t.n(p);const g=window[Symbol.for("X_ITE.X3D-8.4.3")].require("standard/Math/Numbers/Vector3");var w=t.n(g);const m=window[Symbol.for("X_ITE.X3D-8.4.3")].require("standard/Math/Numbers/Rotation4");var f=t.n(m);const _=window[Symbol.for("X_ITE.X3D-8.4.3")].require("standard/Math/Numbers/Matrix4");var T=t.n(_);const M=window[Symbol.for("X_ITE.X3D-8.4.3")].require("x_ite/Namespace");var j,v,y,V,S,b=t.n(M);function X(t){h().call(this,t),this.addType(x().X3DTextureProjectorNode),this._location.setUnit("length"),this._farDistance.setUnit("length"),this._location.setUnit("length")}X.prototype=Object.assign(Object.create(h().prototype),{constructor:X,initialize:function(){h().prototype.initialize.call(this),this._on.addInterest("set_on__",this),this._texture.addInterest("set_texture__",this),this.set_texture__()},getGlobal:function(){return this._global.getValue()},getLocation:function(){return this._location.getValue()},getDirection:function(){return this._direction.getValue()},getNearDistance:function(){return this._nearDistance.getValue()},getFarDistance:function(){return this._farDistance.getValue()},getTexture:function(){return this.textureNode},getBiasMatrix:(S=new(T())(.5,0,0,0,0,.5,0,0,0,0,.5,0,.5,.5,.5,1),function(){return S}),straightenHorizon:(j=new(w())(0,0,0),v=new(w())(0,0,0),y=new(w())(0,0,0),V=new(f())(0,0,1,0),function(t){t.multVecRot(j.assign(w().xAxis).negate()),t.multVecRot(v.assign(w().zAxis)),y.assign(this._upVector.getValue()).normalize();var e=v.cross(y);return Math.abs(v.dot(y))>=1||Math.abs(e.dot(j))>=1?t:(V.setFromToVec(j,e),t.multRight(V))}),set_on__:function(){this._on.getValue()&&this.textureNode?(delete this.push,delete this.pop):(this.push=Function.prototype,this.pop=Function.prototype)},set_texture__:function(){this.textureNode&&this.textureNode.removeInterest("set_aspectRatio__",this),this.textureNode=d()(x().X3DTexture2DNode,this._texture),this.textureNode&&this.textureNode.addInterest("set_aspectRatio__",this),this.set_aspectRatio__(),this.set_on__()},set_aspectRatio__:function(){this.textureNode?this._aspectRatio=this.textureNode.getWidth()/this.textureNode.getHeight():this._aspectRatio=0},push:function(t){var e=this.getTextureProjectors().pop();e.set(this,t.getModelViewMatrix().get()),this._global.getValue()?(t.getGlobalObjects().push(e),t.getTextureProjectors().push(e)):(t.getLocalObjects().push(e),t.getTextureProjectors().push(e),++t.getLocalObjectsCount()[2])},pop:function(t){this._global.getValue()||(t.getLocalObjects().pop(),--t.getLocalObjectsCount()[2])}});const O=X;b().set("x_ite/Components/TextureProjector/X3DTextureProjectorNode",O);const P=O,F=window[Symbol.for("X_ITE.X3D-8.4.3")].require("standard/Math/Geometry/Camera");var D=t.n(F);const N=window[Symbol.for("X_ITE.X3D-8.4.3")].require("standard/Utility/ObjectCache");var I=t.n(N),R=I()(E);function E(){this.projectionMatrix=new(T()),this.modelViewMatrix=new(T()),this.modelMatrix=new(T()),this.invTextureSpaceMatrix=new(T()),this.invTextureSpaceProjectionMatrix=new(T()),this.location=new(w())(0,0,0),this.locationArray=new Float32Array(3),this.direction=new(w())(0,0,0),this.rotation=new(f()),this.projectiveTextureMatrix=new(T()),this.projectiveTextureMatrixArray=new Float32Array(16)}function z(t){P.call(this,t),this.addType(x().TextureProjector),this._fieldOfView.setUnit("angle")}E.prototype={constructor:E,set:function(t,e){this.browser=t.getBrowser(),this.textureProjectorNode=t,this.modelViewMatrix.assign(e)},setGroup:function(t){this.groupNode=t},getModelViewMatrix:function(){return this.modelViewMatrix},setGlobalVariables:function(t){var e=this.textureProjectorNode,i=t.getCameraSpaceMatrix().get(),r=this.modelMatrix.assign(this.modelViewMatrix).multRight(i),o=this.invTextureSpaceMatrix.assign(e.getGlobal()?r:T().Identity);this.rotation.setFromToVec(w().zAxis,this.direction.assign(e.getDirection()).negate()),e.straightenHorizon(this.rotation),o.translate(e.getLocation()),o.rotate(this.rotation),o.inverse();var n=e.getTexture().getWidth(),s=e.getTexture().getHeight(),a=e.getNearDistance(),u=e.getFarDistance(),c=e.getFieldOfView();D().perspective(c,a,u,n,s,this.projectionMatrix),e.getGlobal()||o.multLeft(r.inverse()),this.invTextureSpaceProjectionMatrix.assign(o).multRight(this.projectionMatrix).multRight(e.getBiasMatrix()),this.projectiveTextureMatrix.assign(i).multRight(this.invTextureSpaceProjectionMatrix),this.projectiveTextureMatrixArray.set(this.projectiveTextureMatrix),this.modelViewMatrix.multVecMatrix(this.location.assign(e._location.getValue())),this.locationArray.set(this.location)},setShaderUniforms:function(t,e,i){const r=e.numProjectiveTextures++;if(e.hasTextureProjector(r,this))return;const o=this.textureProjectorNode.getTexture(),n=this.browser.getTexture2DUnit();t.activeTexture(t.TEXTURE0+n),t.bindTexture(t.TEXTURE_2D,o.getTexture()),t.uniform1i(e.x3d_ProjectiveTexture[r],n),t.uniformMatrix4fv(e.x3d_ProjectiveTextureMatrix[r],!1,this.projectiveTextureMatrixArray),t.uniform3fv(e.x3d_ProjectiveTextureLocation[r],this.locationArray)},dispose:function(){R.push(this)}},z.prototype=Object.assign(Object.create(P.prototype),{constructor:z,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(u())([new(s())(x().inputOutput,"metadata",new(o().SFNode)),new(s())(x().inputOutput,"description",new(o().SFString)),new(s())(x().inputOutput,"on",new(o().SFBool)(!0)),new(s())(x().inputOutput,"global",new(o().SFBool)(!0)),new(s())(x().inputOutput,"location",new(o().SFVec3f)(0,0,1)),new(s())(x().inputOutput,"direction",new(o().SFVec3f)(0,0,1)),new(s())(x().inputOutput,"upVector",new(o().SFVec3f)(0,0,1)),new(s())(x().inputOutput,"fieldOfView",new(o().SFFloat)(.7854)),new(s())(x().inputOutput,"nearDistance",new(o().SFFloat)(1)),new(s())(x().inputOutput,"farDistance",new(o().SFFloat)(10)),new(s())(x().outputOnly,"aspectRatio",new(o().SFFloat)),new(s())(x().inputOutput,"texture",new(o().SFNode))]),getTypeName:function(){return"TextureProjector"},getComponentName:function(){return"TextureProjector"},getContainerField:function(){return"children"},initialize:function(){P.prototype.initialize.call(this)},getFieldOfView:function(){var t=this._fieldOfView.getValue();return t>0&&t<Math.PI?t:Math.PI/4},getTextureProjectors:function(){return R}});const A=z;b().set("x_ite/Components/TextureProjector/TextureProjector",A);const C=A;var B=I()(U);function U(){this.projectionMatrix=new(T()),this.modelViewMatrix=new(T()),this.modelMatrix=new(T()),this.invTextureSpaceMatrix=new(T()),this.location=new(w())(0,0,0),this.locationArray=new Float32Array(3),this.invTextureSpaceProjectionMatrix=new(T()),this.direction=new(w())(0,0,0),this.rotation=new(f()),this.projectiveTextureMatrix=new(T()),this.projectiveTextureMatrixArray=new Float32Array(16)}function Y(t){P.call(this,t),this.addType(x().TextureProjectorParallel),this._fieldOfView.setUnit("length")}U.prototype={constructor:U,set:function(t,e){this.browser=t.getBrowser(),this.textureProjectorNode=t,this.modelViewMatrix.assign(e)},setGroup:function(t){this.groupNode=t},getModelViewMatrix:function(){return this.modelViewMatrix},setGlobalVariables:function(t){var e=this.textureProjectorNode,i=t.getCameraSpaceMatrix().get(),r=this.modelMatrix.assign(this.modelViewMatrix).multRight(i),o=this.invTextureSpaceMatrix.assign(e.getGlobal()?r:T().Identity);this.rotation.setFromToVec(w().zAxis,this.direction.assign(e.getDirection()).negate()),e.straightenHorizon(this.rotation),o.translate(e.getLocation()),o.rotate(this.rotation),o.inverse();var n=e.getTexture().getWidth()/e.getTexture().getHeight(),s=e.getMinimumX(),a=e.getMaximumX(),u=e.getMinimumY(),c=e.getMaximumY(),h=e.getSizeX(),l=e.getSizeY(),x=e.getNearDistance(),p=e.getFarDistance();if(n>h/l){var d=(s+a)/2,g=l*n/2;D().ortho(d-g,d+g,u,c,x,p,this.projectionMatrix)}else{d=(u+c)/2,g=h/n/2;D().ortho(s,a,d-g,d+g,x,p,this.projectionMatrix)}e.getGlobal()||o.multLeft(r.inverse()),this.invTextureSpaceProjectionMatrix.assign(o).multRight(this.projectionMatrix).multRight(e.getBiasMatrix()),this.projectiveTextureMatrix.assign(i).multRight(this.invTextureSpaceProjectionMatrix),this.projectiveTextureMatrixArray.set(this.projectiveTextureMatrix),this.modelViewMatrix.multVecMatrix(this.location.assign(e._location.getValue())),this.locationArray.set(this.location)},setShaderUniforms:function(t,e,i){const r=e.numProjectiveTextures++;if(e.hasTextureProjector(r,this))return;const o=this.textureProjectorNode.getTexture(),n=this.browser.getTexture2DUnit();t.activeTexture(t.TEXTURE0+n),t.bindTexture(t.TEXTURE_2D,o.getTexture()),t.uniform1i(e.x3d_ProjectiveTexture[r],n),t.uniformMatrix4fv(e.x3d_ProjectiveTextureMatrix[r],!1,this.projectiveTextureMatrixArray),t.uniform3fv(e.x3d_ProjectiveTextureLocation[r],this.locationArray)},dispose:function(){B.push(this)}},Y.prototype=Object.assign(Object.create(P.prototype),{constructor:Y,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(u())([new(s())(x().inputOutput,"metadata",new(o().SFNode)),new(s())(x().inputOutput,"description",new(o().SFString)),new(s())(x().inputOutput,"on",new(o().SFBool)(!0)),new(s())(x().inputOutput,"global",new(o().SFBool)(!0)),new(s())(x().inputOutput,"location",new(o().SFVec3f)(0,0,1)),new(s())(x().inputOutput,"direction",new(o().SFVec3f)(0,0,1)),new(s())(x().inputOutput,"upVector",new(o().SFVec3f)(0,1,0)),new(s())(x().inputOutput,"fieldOfView",new(o().MFFloat)(-1,-1,1,1)),new(s())(x().inputOutput,"nearDistance",new(o().SFFloat)(1)),new(s())(x().inputOutput,"farDistance",new(o().SFFloat)(10)),new(s())(x().outputOnly,"aspectRatio",new(o().SFFloat)),new(s())(x().inputOutput,"texture",new(o().SFNode))]),getTypeName:function(){return"TextureProjectorParallel"},getComponentName:function(){return"TextureProjector"},getContainerField:function(){return"children"},initialize:function(){P.prototype.initialize.call(this),this._fieldOfView.addInterest("set_fieldOfView___",this),this.set_fieldOfView___()},set_fieldOfView___:function(){var t=this._fieldOfView.length;this.minimumX=t>0?this._fieldOfView[0]:-1,this.minimumY=t>1?this._fieldOfView[1]:-1,this.maximumX=t>2?this._fieldOfView[2]:1,this.maximumY=t>3?this._fieldOfView[3]:1,this.sizeX=this.maximumX-this.minimumX,this.sizeY=this.maximumY-this.minimumY},getMinimumX:function(){return this.minimumX},getMinimumY:function(){return this.minimumY},getMaximumX:function(){return this.maximumX},getMaximumY:function(){return this.maximumY},getSizeX:function(){return this.sizeX},getSizeY:function(){return this.sizeY},getTextureProjectors:function(){return B}});const q=Y;b().set("x_ite/Components/TextureProjector/TextureProjectorParallel",q);const G=q;i().addComponent({name:"TextureProjector",types:{TextureProjector:C,TextureProjectorParallel:G},abstractTypes:{X3DTextureProjectorNode:P}});const L=void 0;b().set("assets/components/TextureProjector",L)})();